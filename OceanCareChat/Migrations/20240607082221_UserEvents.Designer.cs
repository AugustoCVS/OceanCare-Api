// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OceanCareChat.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace OceanCareChat.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240607082221_UserEvents")]
    partial class UserEvents
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OceanCareChat.Models.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("OceanCareChat.Models.OceanUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ReportedTrash")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("OceanUser");
                });

            modelBuilder.Entity("OceanCareChat.Models.Reports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OceanUserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TrashDescription")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TrashLocation")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TrashType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("OceanUserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("OceanCareChat.Models.UserEvent", b =>
                {
                    b.Property<int>("OceanUserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("EventId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("OceanUserId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("OceanCareChat.Models.Reports", b =>
                {
                    b.HasOne("OceanCareChat.Models.OceanUser", "OceanUser")
                        .WithMany("Reports")
                        .HasForeignKey("OceanUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OceanUser");
                });

            modelBuilder.Entity("OceanCareChat.Models.UserEvent", b =>
                {
                    b.HasOne("OceanCareChat.Models.Events", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OceanCareChat.Models.OceanUser", "OceanUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("OceanUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("OceanUser");
                });

            modelBuilder.Entity("OceanCareChat.Models.Events", b =>
                {
                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("OceanCareChat.Models.OceanUser", b =>
                {
                    b.Navigation("Reports");

                    b.Navigation("UserEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
